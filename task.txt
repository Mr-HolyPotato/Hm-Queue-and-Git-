Створіть систему, яка обробляє запити клієнтів за допомогою черги. 
Клієнти можуть надсилати запити, які обробляються у порядку надходження.
 Кожен запит має містити ім'я клієнта та опис проблеми.

Вимоги:
Клас Request:

Поля:
string clientName – ім'я клієнта.
string issueDescription – опис проблеми.
Конструктор, який приймає ім'я клієнта та опис проблеми.
Клас CustomerService:

Використовуйте чергу для зберігання запитів.
Метод addRequest(const Request& req) – для додавання запиту до черги.
Метод processRequest() – для обробки (вилучення) запиту, видаляючи його з черги, та виведення інформації про нього.
Метод isEmpty() – для перевірки, чи черга порожня.

Додати можливість перевірки кількості запитів у черзі.
Додати можливість виводу всіх запитів у черзі без їх обробки.

Тестування: У функції main створіть об'єкти класу Request, додайте їх до CustomerService і обробіть запити.


///////////////////////////////////////////////////////////////////////////////////////////////////////////////
Завдання: Практика роботи з гілками та злиттям у Git
Мета:
Навчитися створювати гілки, робити зміни в різних гілках, зливати їх, а також працювати з віддаленим репозиторієм.

Кроки:
Ініціалізація репозиторію:

Створіть нову папку і перейдіть у неї.
Ініціалізуйте Git-репозиторій командою:
bash
Copy code
git init
Створення файлу та першого коміту:

Створіть текстовий файл main.txt і напишіть у ньому текст:
plaintext
Copy code
Це основний файл у гілці main.
Додайте файл до індексу і зробіть коміт:
bash
Copy code
git add main.txt
git commit -m "Додано main.txt в основну гілку"
Створення нової гілки та робота з нею:

Створіть нову гілку feature та перейдіть на неї:
bash
Copy code
git branch feature
git checkout feature
Додайте файл feature.txt у гілці feature з текстом:
plaintext
Copy code
Це файл для гілки feature.
Закомітьте файл:
bash
Copy code
git add feature.txt
git commit -m "Додано feature.txt у гілку feature"
Повернення в гілку main та злиття:

Перейдіть у гілку main:
bash
Copy code
git checkout main
Злийте зміни з гілки feature в main:
bash
Copy code
git merge feature
Пуш в віддалений репозиторій:

Створіть віддалений репозиторій на GitHub або іншій платформі та додайте його як origin:
bash
Copy code
git remote add origin <URL вашого віддаленого репозиторію>
Відправте зміни у віддалений репозиторій:
bash
Copy code
git push -u origin main
Зміни з віддаленого репозиторію:

Внесіть зміни в main.txt безпосередньо у віддаленому репозиторії на GitHub.
Завантажте ці зміни у свій локальний репозиторій:
bash
Copy code
git pull origin main